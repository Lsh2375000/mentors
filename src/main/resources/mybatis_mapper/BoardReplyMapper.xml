<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.nomadlab.mentors.boardReply.mapper.BoardReplyMapper">

    <!-- ReplyVO에 대한 resultMap 설정 -->
    <resultMap id="commentList" type="kr.nomadlab.mentors.boardReply.domain.ReplyVO">
        <id property="rno" column="rno"/>
        <result property="parentNo" column="parentNo"/>
        <result property="mno" column="mno"/>
        <result property="boardNo" column="boardNo"/>
        <result property="content" column="content"/>
        <result property="writer" column="writer"/>
        <result property="addDate" column="addDate"/>

        <!-- children에 대한 resultMap 설정 -->
        <collection property="children" column="rno" ofType="kr.nomadlab.mentors.boardReply.domain.ReplyVO"
                    select="selectReplyList" />
    </resultMap>

    <!-- 대댓글 목록 조회 -->
    <select id="selectReplyList" resultType="kr.nomadlab.mentors.boardReply.domain.ReplyVO">
        select *
        from `boardReply`
        where `parentNo` = #{rno} and `parentNo` != `rno`
        order by `rno`
    </select>

    <!-- 댓글 목록 조회 -->
    <select id="selectCommentWithReplyList" resultMap="commentList">
        select *
        from `boardReply`
        where `boardNo` = #{boardNo} and `rno` = `parentNo`
        order by `rno` desc limit #{skip}, #{size}
    </select>

    <insert id="insertReply" parameterType="kr.nomadlab.mentors.boardReply.domain.ReplyVO" useGeneratedKeys="true" keyProperty="rno">
        insert into `boardReply`(`rno`, `parentNo`, `mno`, `boardNo`, `content`, `writer`, `addDate`, cmEdtNot)
        values (#{rno}, #{parentNo}, #{mno}, #{boardNo}, #{content}, #{writer}, NOW(), #{cmEdtNot})
    </insert>

    <!-- 부모 댓글 번호 업데이트 -->
    <update id="updateParentNo">
        update `boardReply` set `parentNo` = #{rno} where `rno` = #{rno}
    </update>

    <select id="selectReply" resultType="kr.nomadlab.mentors.boardReply.domain.ReplyVO">
        select * from `boardReply` where `rno` = #{rno}
    </select>

    <update id="updateReply">
        update `boardReply` set `content` = #{content}, `addDate` = NOW(), `cmEdtNot` = #{cmEdtNot} where `rno` = #{rno}
    </update>

    <delete id="deleteReply">
        delete from `boardReply` where `rno` = #{rno}
    </delete>

    <select id="getCount" resultType="int">
        select count(*) from `boardReply` where `boardNo` = #{boardNo} and `rno` = `parentNo`
    </select>


</mapper>