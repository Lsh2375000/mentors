<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.nomadlab.mentors.board.mapper.BoardMapper">

    <!-- 게시글 등록 -->
    <insert id="insertBoard">
        INSERT INTO `board`(`boardNo`, `memberId`, `writer`, `title`, `content`,  `hit`, `addDate`)
        VALUES (#{boardNo}, #{memberId}, #{writer}, #{title}, #{content}, 0, NOW())
    </insert>

    <!-- 게시글 수정 -->
    <update id="updateBoard">
        update `board` set `title` = #{title}, `content` = #{content}
        where `boardNo` = #{boardNo}
    </update>

    <!-- 조회수 업데이트 -->
    <update id="updateHit">
        update `board` set `hit` = `hit` + 1 where `boardNo` = #{boardNo}
    </update>

    <!-- 게시글 삭제 -->
    <delete id="deleteBoard">
        delete from `board` where `boardNo` = #{boardNo}
    </delete>

    <!-- 게시글 조회 -->
    <select id="selectBoard">
        SELECT b.*, COUNT(br.boardNo) AS replyCount
        FROM board AS b
        LEFT JOIN boardReply AS br ON b.boardNo = br.boardNo
        WHERE b.boardNo = #{boardNo}
    </select>

    <!-- 게시글 좋아요 추가 -->
    <insert id="insertLike">
        INSERT INTO `boardLike`(`boardNo`, `mno`) VALUES (#{boardNo}, #{mno})
    </insert>

    <!-- 좋아요 조회 -->
    <select id="selectLikeList" resultType="kr.nomadlab.mentors.board.domain.BoardLikeVO">
        SELECT * FROM `boardLike` WHERE `boardNo` = #{boardNo}
    </select>

    <!-- 게시글 전체 조회 -->
    <select id="selectBoardList" resultType="kr.nomadlab.mentors.board.domain.BoardVO">
        SELECT `b`.*, COUNT(`br`.`boardNo`) AS replyCount, COUNT(`bl`.`boardNo`) AS likeCount
        FROM `board` AS `b`
        LEFT JOIN `boardReply` AS `br` ON `b`.`boardNo` = `br`.`boardNo`
        LEFT JOIN `boardLike` AS `bl` ON `b`.`boardNo` = `bl`.`boardNo`
        <include refid="search"/>
        GROUP BY `b`.`boardNo`
        ORDER BY
            <!-- 정렬 조건 -->
            <choose>
                <when test="order == 'reply'">`replyCount`</when>
                <when test="order == 'like'">`likeCount`</when>
                <!-- 추가적인 컬럼이 있으면 위와 같이 추가 -->
                <otherwise>`boardNo`</otherwise>
            </choose>
            <!-- 여기까지 -->
        DESC LIMIT #{skip}, #{size}
    </select>

    <sql id="search">
        <where>
            <if test="types != null and types.length > 0">
                <foreach collection="types" item="type" open="(" close=")" separator=" OR">
                    <if test="type == 't'.toString()">
                        `b`.`title` like concat('%', #{keyword}, '%')
                    </if>
                    <if test="type == 'w'.toString()">
                        `b`.`writer` like concat('%', #{keyword}, '%')
                    </if>
                    <if test="type == 'c'.toString()">
                        `b`.`content` like concat('%', #{keyword}, '%')
                    </if>
                </foreach>
            </if>
        </where>
    </sql>

    <!--게시물 갯수-->
    <select id="getCount" resultType="int">
        select count(*) from `board` as `b`
        <include refid="search" />
    </select>

    <!--myPage 유저가 쓴 게시글-->
    <select id="myPage" resultType="kr.nomadlab.mentors.board.domain.BoardVO">
        select title, content, hit, addDate, boardNo from board where memberId = #{memberId}
    </select>

</mapper>
